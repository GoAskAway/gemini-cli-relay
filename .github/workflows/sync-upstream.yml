name: Sync Upstream

on:
  # 每天 UTC 20:00 (北京时间 04:00) 自动运行
  schedule:
    - cron: '0 20 * * *'   # 北京时间 04:00
  # 允许手动触发
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 获取所有分支和历史
          fetch-depth: 0
          # 使用 PAT token 以获取 workflow 写入权限
          token: ${{ secrets.SYNC_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/google-gemini/gemini-cli.git || true
          git remote -v

      - name: Fetch upstream changes
        run: |
          git fetch upstream
          git fetch origin

      - name: Switch to upstream-main branch
        run: |
          # 如果分支不存在，创建它
          git checkout upstream-main || git checkout -b upstream-main

      - name: Sync with upstream main
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Before sync:"
          git log --oneline -5

          # 重置到上游 main 分支的最新状态
          git reset --hard upstream/main

          echo "After sync:"
          git log --oneline -5

      - name: Verify sync completion
        run: |
          echo "Sync completed successfully"
          echo "Current branch: $(git branch --show-current)"
          echo "Latest upstream commit: $(git log --oneline -1)"
          echo "Total commits synced: $(git rev-list --count HEAD)"

      - name: Check for changes and push to upstream-main
        id: check_changes
        run: |
          # 检查是否有更新
          if git diff --quiet origin/upstream-main 2>/dev/null; then
            echo "No changes to push"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Force pushing updates to upstream-main branch"
            # 使用 --force 而不是 --force-with-lease，确保 100% 同步
            git push origin upstream-main --force
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "latest_commit=$(git log --oneline -1)" >> $GITHUB_OUTPUT
          fi

      - name: Clean up old sync PRs and branches
        if: steps.check_changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.SYNC_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking for existing sync PRs..."
          
          # 查找所有 sync/upstream-* 开头的开放 PR
          existing_prs=$(gh pr list --head-pattern "sync/upstream-*" --state open --json number,headRefName | jq -r '.[] | "\(.number):\(.headRefName)"')
          
          if [ -n "$existing_prs" ]; then
            echo "Found existing sync PRs, cleaning up..."
            echo "$existing_prs" | while IFS=':' read -r pr_number branch_name; do
              echo "Closing PR #$pr_number and deleting branch $branch_name"
              gh pr close "$pr_number" --comment "Superseded by new upstream sync"
              git push origin --delete "$branch_name" || echo "Branch $branch_name already deleted"
            done
          else
            echo "No existing sync PRs found"
          fi

      - name: Create sync PR to main
        if: steps.check_changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.SYNC_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          # 创建同步分支
          SYNC_BRANCH="sync/upstream-$(date +%Y%m%d-%H%M%S)"
          echo "Creating sync branch: $SYNC_BRANCH"
          
          git checkout -b "$SYNC_BRANCH"
          git push origin "$SYNC_BRANCH"
          
          # 创建 PR 到 main 分支
          gh pr create \
            --base main \
            --head "$SYNC_BRANCH" \
            --title "🔄 Sync upstream changes $(date +%Y-%m-%d)" \
            --body "$(cat <<'EOF'
          ## 📥 Upstream Sync Update
          
          This PR synchronizes the latest changes from upstream repository.
          
          **Changes:**
          - **Source**: google-gemini/gemini-cli
          - **Latest commit**: ${{ steps.check_changes.outputs.latest_commit }}
          - **Sync time**: $(date)
          
          ### Review Notes
          - This is an automated sync from upstream
          - Please review changes for any potential conflicts with local modifications
          - Merge when ready to integrate upstream updates into main branch
          
          🤖 Auto-generated by upstream sync workflow
          EOF
          )"
          
          echo "✅ Created PR: $SYNC_BRANCH → main"

      - name: Create summary
        run: |
          echo "## 📥 Upstream Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Source**: google-gemini/gemini-cli" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: upstream-main branch" >> $GITHUB_STEP_SUMMARY
          echo "- **Latest commit**: $(git log --oneline -1)" >> $GITHUB_STEP_SUMMARY
          echo "- **Total commits**: $(git rev-list --count HEAD)" >> $GITHUB_STEP_SUMMARY
          echo "- **Sync time**: $(date)" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_changes.outputs.has_changes }}" = "true" ]; then
            echo "- **Status**: ✅ Changes detected, PR created to main" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ✅ No changes, already up to date" >> $GITHUB_STEP_SUMMARY
          fi
